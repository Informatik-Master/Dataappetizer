service: proto2-backend
frameworkVersion: "3"

custom:
  datapointTable: "datapoint-${sls:stage}"
  connectionsTable: "connections-${sls:stage}"
  connectionsTableVinIndex: "connections-${sls:stage}-vinIndex"
  dynamodb:
    stages:
      - dev
    start:
      port: 8002
      inMemory: true
      migrate: true

plugins:
  - serverless-webpack
  - serverless-offline-dynamodb-streams
  - serverless-offline
  - serverless-dynamodb-local

provider:
  name: aws
  runtime: nodejs18.x
  region: us-east-1
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource:
            - Fn::GetAtt: [DataPointTable, Arn]
            - Fn::GetAtt: [Connections, Arn]
            - Fn::Join:
                - "/"
                - - Fn::GetAtt: [Connections, Arn]
                  - "index"
                  - ${self:custom.connectionsTableVinIndex}

  environment:
    DATAPOINT_TABLE: ${self:custom.datapointTable}
    CONNECTIONS_TABLE: ${self:custom.connectionsTable}
    CONNECTIONS_TABLE_VIN_INDEX: ${self:custom.connectionsTableVinIndex}

functions:
  api:
    handler: index.handler
    events:
      - httpApi: "*"
  refresh:
    handler: refresh.handler
    events:
      - schedule: rate(1 minutes)
  connect:
    handler: src/connect/handler.connect
    events:
      - websocket:
          route: $connect
          # npx wscat -c ws://localhost:3001
  disconnect:
    handler: src/disconnect/handler.disconnect
    events:
      - websocket:
          route: $disconnect

resources:
  Resources:
    Connections:
      Type: "AWS::DynamoDB::Table"
      Properties:
        AttributeDefinitions:
          - AttributeName: connectionId
            AttributeType: S
          # - AttributeName: vin
          #   AttributeType: S
        KeySchema:
          - AttributeName: connectionId
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        TableName: ${self:custom.connectionsTable}
        # GlobalSecondaryIndexes:
        #   - IndexName: ${self:custom.connectionsTableVinIndex}
        #     Projection:
        #       ProjectionType: ALL
        #     KeySchema:
        #       - AttributeName: vin
        #         KeyType: HASH
    DataPointTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: vin
            AttributeType: S
          - AttributeName: timestamp
            AttributeType: N
        KeySchema:
          - AttributeName: vin
            KeyType: HASH
          - AttributeName: timestamp
            KeyType: RANGE
        BillingMode: PAY_PER_REQUEST
        TableName: ${self:custom.datapointTable}
